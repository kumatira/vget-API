AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: vget-API
Globals:
  Function:
    Timeout: 30
    Runtime: nodejs14.x
    Environment:
        Variables:
          RUN_ENV: !FindInMap [ EnvMap, !Ref environment, StageEnv ]

Resources:
  APIGateway:
    Type: AWS::Serverless::Api
    Properties:
      Name: !Join [ "-", [ vget-api, !FindInMap [ EnvMap, !Ref environment, StageEnv ]]]
      StageName: v1
      Domain:
        BasePath: v1
        DomainName: !FindInMap [ DomainMap, !Ref environment, StageEnv ]
        CertificateArn: arn:aws:acm:ap-northeast-1:951950134383:certificate/f8e8805c-7860-4c5a-9191-b20280d586b0
        Route53:
          HostedZoneId: Z06745043MOGS4YCD03NK
  GetEnvFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: dist/getEnv
      FunctionName: !Join [ "-", [ vget-api-env, !FindInMap [ EnvMap, !Ref environment, StageEnv ]]]
      Handler: index.lambdaHandler
      Events:
        GetStage:
          Type: Api
          Properties:
            Path: /env
            Method: get
            RestApiId:
              Ref: APIGateway
  GetVideosFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: dist/getVideos
      FunctionName: !Join [ "-", [ vget-api-videos, !FindInMap [ EnvMap, !Ref environment, StageEnv ]]]
      Handler: index.lambdaHandler
      Events:
        GetStage:
          Type: Api
          Properties:
            Path: /videos
            Method: get
            RestApiId:
              Ref: APIGateway
      Policies:
        - DynamoDBReadPolicy:
            TableName: vgetDataTable
  GetVideosIdFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: dist/getVideosId
      FunctionName: !Join [ "-", [ vget-api-videos-id, !FindInMap [ EnvMap, !Ref environment, StageEnv ]]]
      Handler: index.lambdaHandler
      Events:
        GetStage:
          Type: Api
          Properties:
            Path: /videos/{videoId}
            Method: get
            RestApiId:
              Ref: APIGateway
      Policies:
        - DynamoDBReadPolicy:
            TableName: vgetDataTable
  PostVideoTagsFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: dist/postVideoTags
      FunctionName: !Join [ "-", [ vget-api-video-tag, !FindInMap [ EnvMap, !Ref environment, StageEnv ]]]
      Handler: index.lambdaHandler
      Events:
        GetStage:
          Type: Api
          Properties:
            Path: /video/tags
            Method: post
            RestApiId:
              Ref: APIGateway
      Policies:
        - DynamoDBCrudPolicy:
            TableName: vgetDataTable

Parameters:
  environment:
    Type: String
    AllowedValues:
      - prod
      - stg
      - dev
    Default: dev

Mappings:
  EnvMap:
    prod:
      StageEnv: 'production'
    stg:
      StageEnv: 'staging'
    dev:
      StageEnv: 'development'
  DomainMap:
    prod:
      StageEnv: 'api.vget.dev'
    stg:
      StageEnv: 'api-staging.vget.dev'
    dev:
      StageEnv: 'api-development.vget.dev'